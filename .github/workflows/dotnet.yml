# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore working/DanielCarey.SlnPlus.csproj

    - name: Build
      run: dotnet build --no-restore working/DanielCarey.SlnPlus.csproj
      
    - name: Pack
      run: dotnet pack /p:PackageVersion=1.0.${{ env.BUILD_NUMBER }} --no-restore --no-build --configuration Release --output nupkgs working/DanielCarey.SlnPlus.csproj

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DanielCarey.SlnPlus.1.0.${{ env.BUILD_NUMBER }}
        path: nupkgs/*.nupkg
              
    - name: GitHub authentication
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    - name: Publish to GitHub Packages
      run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{secrets.GITHUB_TOKEN}} --source "github"
      if: github.ref == 'refs/heads/master'

    - name: Get Commit Messages
      id: commit_messages
      run: |
        echo "::set-output name=messages::$(git log --pretty=format:'%s' <last_release_tag>..HEAD)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.0.${{ env.BUILD_NUMBER }}
        release_name: 1.0.${{ env.BUILD_NUMBER }}
        draft: false
        prerelease: false

    - name: Upload NuGet Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/DanielCarey.SlnPlus.1.0.${{ env.BUILD_NUMBER }}.nupkg
        asset_name: DanielCarey.SlnPlus.1.0.${{ env.BUILD_NUMBER }}.nupkg
        asset_content_type: application/zip